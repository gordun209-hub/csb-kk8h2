{"version":3,"sources":["reducers/anecdoteReducer.js","components/AnecdoteForm.js","components/AnecdoteList.js","App.js","index.js"],"names":["getId","Math","random","toFixed","initialState","map","anecdote","content","id","votes","reducer","state","action","type","selectedAnecdote","find","data","votedAnecdote","AnecdoteForm","dispatch","useDispatch","onSubmit","event","preventDefault","target","value","createAnecdote","name","Anecdotes","anecdotes","useSelector","anecdoteVotes","handleClick","Anecdote","onClick","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"qLASMA,EAAQ,kBAAO,IAASC,KAAKC,UAAUC,QAAQ,IA4B/CC,EArCmB,CACvB,gCACA,6DACA,+LACA,kHACA,kDACA,sLA+BoCC,KA1BrB,SAACC,GAChB,MAAO,CACLC,QAASD,EACTE,GAAIR,IACJS,MAAO,MA6CIC,EArBC,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,OACH,IAAMC,EAAmBH,EAAMI,MAC7B,SAACT,GAAD,OAAcA,EAASE,KAAOI,EAAOI,KAAKR,MAEtCS,EAAa,2BACdH,GADc,IAEjBL,MAAOK,EAAiBL,UAG1B,OAAOE,EAAMN,KAAI,SAACC,GAAD,OACfA,EAASE,KAAOI,EAAOJ,GAAKF,EAAWW,KAE3C,IAAK,eACH,MAAM,GAAN,mBAAWN,GAAX,CAAkBC,EAAOI,OAC3B,QACE,OAAOL,I,OCpDAO,EAAe,WAC1B,IAAMC,EAAWC,cAQjB,OACE,mCACE,uBAAMC,SATU,SAACC,GACnBA,EAAMC,iBACN,IAAMhB,EAAUe,EAAME,OAAOlB,SAASmB,MACtCH,EAAME,OAAOlB,SAASmB,MAAQ,GAC9BN,EDS0B,SAACZ,GAC7B,MAAO,CACLM,KAAM,eACNG,KAAM,CACJT,UACAE,MAAO,EACPD,GAAIR,MCfG0B,CAAenB,KAKtB,UACE,8BACE,uBAAOoB,KAAK,eAEd,wBAAQd,KAAK,SAAb,0BChBKe,EAAY,WACvB,IAAMT,EAAWC,cACXS,EAAYC,aAAY,SAACnB,GAAD,OAAWA,KACzC,OACE,mCACE,6BACGkB,EAAUxB,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEEuB,UAAWvB,EAASC,QACpBwB,cAAezB,EAASG,MACxBuB,YAAa,kBAAMb,EFiBtB,CACLN,KAAM,OACNG,KAAM,CAAER,GEnB0CF,EAASE,QAH9CF,EAASE,YAWpByB,EAAW,SAAC,GAA+C,IAA7CF,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,YAAaH,EAAgB,EAAhBA,UAC9C,OACE,qCACE,8BAAMA,IADR,OAEOE,EACL,wBAAQG,QAASF,EAAjB,sBCZSG,EAZH,WACV,OACE,gCACE,2CACA,4CAEA,cAAC,EAAD,IACA,cAAC,EAAD,QCHAC,EAAQC,YAAY3B,GAE1B4B,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.dedcf2cd.chunk.js","sourcesContent":["const anecdotesAtStart = [\n  \"If it hurts, do it more often\",\n  \"Adding manpower to a late software project makes it later!\",\n  \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\",\n  \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\",\n  \"Premature optimization is the root of all evil.\",\n  \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\"\n];\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n};\n\nexport const createAnecdote = (content) => {\n  return {\n    type: \"NEW_ANECDOTE\",\n    data: {\n      content,\n      votes: 0,\n      id: getId()\n    }\n  };\n};\n\nexport const votedAnecdote = (id) => {\n  return {\n    type: \"VOTE\",\n    data: { id }\n  };\n};\n\nconst initialState = anecdotesAtStart.map(asObject);\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"VOTE\":\n      const selectedAnecdote = state.find(\n        (anecdote) => anecdote.id === action.data.id\n      );\n      const votedAnecdote = {\n        ...selectedAnecdote,\n        votes: selectedAnecdote.votes++\n      };\n\n      return state.map((anecdote) =>\n        anecdote.id !== action.id ? anecdote : votedAnecdote\n      );\n    case \"NEW_ANECDOTE\":\n      return [...state, action.data];\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createAnecdote } from \"../reducers/anecdoteReducer\";\n\nexport const AnecdoteForm = () => {\n  const dispatch = useDispatch();\n  const addAnecdote = (event) => {\n    event.preventDefault();\n    const content = event.target.anecdote.value;\n    event.target.anecdote.value = \"\";\n    dispatch(createAnecdote(content));\n  };\n\n  return (\n    <>\n      <form onSubmit={addAnecdote}>\n        <div>\n          <input name=\"anecdote\" />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { votedAnecdote } from \"../reducers/anecdoteReducer\";\nexport const Anecdotes = () => {\n  const dispatch = useDispatch();\n  const anecdotes = useSelector((state) => state);\n  return (\n    <>\n      <ul>\n        {anecdotes.map((anecdote) => (\n          <Anecdote\n            key={anecdote.id}\n            anecdotes={anecdote.content}\n            anecdoteVotes={anecdote.votes}\n            handleClick={() => dispatch(votedAnecdote(anecdote.id))}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst Anecdote = ({ anecdoteVotes, handleClick, anecdotes }) => {\n  return (\n    <>\n      <div>{anecdotes}</div>\n      has {anecdoteVotes}\n      <button onClick={handleClick}>vote</button>\n    </>\n  );\n};\n","import React from \"react\";\nimport { AnecdoteForm } from \"./components/AnecdoteForm\";\nimport { Anecdotes } from \"./components/AnecdoteList\";\nconst App = () => {\n  return (\n    <div>\n      <h2>Anecdotes</h2>\n      <h2>create new</h2>\n\n      <Anecdotes />\n      <AnecdoteForm />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport reducer from './reducers/anecdoteReducer'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}